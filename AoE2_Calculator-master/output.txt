./backend/combatCalculator.cpp:74:    std::cout << "Error: Input player number not recognized"
./backend/combatCalculator.cpp:102:    // (unlike srand(time(0));) std::cout << "\nRandom X = " << randomX;
./backend/combatCalculator.cpp:117:    std::cout << "d6 roll " << i << ": " << d6DieRoll << "\n";
./backend/combatCalculator.cpp:133:    std::cout << "Error: Input player number not recognized"
./backend/combatCalculator.cpp:156:  std::cout << "For entities that can retreat: Enter 1 if retreating or 0 if "
./backend/combatCalculator.cpp:162:    std::cout << "Error: The retreating value can only be a 0 or 1"
./backend/combatCalculator.cpp:172:  std::cout << "\n";
./backend/combatCalculator.cpp:175:    std::cout << inputMessage << "\n";
./backend/combatCalculator.cpp:181:    std::cout << "(Assisting) ";
./backend/combatCalculator.cpp:186:    std::cout << "(Assisting) ";
./backend/combatCalculator.cpp:502:        std::cout << "\n"
./backend/combatCalculator.cpp:510:          std::cout << "Error: The input must be 0 or 1 for player 1's "
./backend/combatCalculator.cpp:601:                std::cout << "The conversion attempt for p1 failed. Pay 2 gold "
./backend/combatCalculator.cpp:611:                std::cout << "The conversion attempt for p1 failed. Pay 2 gold "
./backend/combatCalculator.cpp:634:            std::cout << "<< Player 1 must pay "
./backend/combatCalculator.cpp:650:            std::cout << "Player 1's monk powers failed to activate"
./backend/combatCalculator.cpp:659:              std::cout << "Error: Player 1's conversion attempt cannot be "
./backend/combatCalculator.cpp:691:            std::cout << "Player 1's 'assisting' monk powers failed to activate"
./backend/combatCalculator.cpp:703:              std::cout << "Is player 1's 'assistant monk' targeting player "
./backend/combatCalculator.cpp:713:              std::cout << "Error: The input must be 0 or 1"
./backend/combatCalculator.cpp:724:                std::cout << "Error: Player 1's conversion attempt cannot be "
./backend/combatCalculator.cpp:762:        std::cout << "Is player 2's monk performing a conversion (enter 0) or "
./backend/combatCalculator.cpp:769:          std::cout << "Error: The input must be 0 or 1 for player 2's "
./backend/combatCalculator.cpp:859:                std::cout << "The conversion attempt for p2 failed. Pay 2 gold "
./backend/combatCalculator.cpp:893:            std::cout << "<< Player 2 must pay "
./backend/combatCalculator.cpp:908:            std::cout << "Player 2's monk powers failed to activate"
./backend/combatCalculator.cpp:917:              std::cout << "Error: Player 2's conversion attempt cannot be "
./backend/combatCalculator.cpp:949:            std::cout << "Player 2's 'assisting' monk powers failed to activate"
./backend/combatCalculator.cpp:961:              std::cout << "Is player 2's 'assistant monk' targeting player "
./backend/combatCalculator.cpp:971:              std::cout << "Error: The input must be 0 or 1"
./backend/combatCalculator.cpp:982:                std::cout << "Error: Player 2's conversion attempt cannot be "
./backend/combatCalculator.cpp:1022:          std::cout << ">> Player 1 gets " << p2PointsLost << " points"
./backend/combatCalculator.cpp:1026:          std::cout << ">> Player 2 gets " << p1PointsLost << " points"
./backend/combatCalculator.cpp:1030:        std::cout << "\n";
./backend/combatCalculator.cpp:1033:        std::cout << "\n"
./backend/combatCalculator.cpp:1355:        std::cout << ">> Place " << p2DamageDie
./backend/combatCalculator.cpp:1360:        std::cout << ">> Place " << p1DamageDie
./backend/combatCalculator.cpp:1367:        std::cout << ">> Player 1 gets " << p2PointsLost << " points"
./backend/combatCalculator.cpp:1371:        std::cout << ">> Player 2 gets " << p1PointsLost << " points"
./backend/combatCalculator.cpp:1375:      std::cout << "\n";
./backend/combatCalculator.cpp:1390:          std::cout << "Did the conditions of Shots_In_The_Back_(Briton) get "
./backend/combatCalculator.cpp:1403:      std::cout << "\n"
./backend/combatCalculator.cpp:1684:        std::cout << ">> Place " << p2DamageDie
./backend/combatCalculator.cpp:1689:        std::cout << ">> Place " << p1DamageDie
./backend/combatCalculator.cpp:1696:        std::cout << ">> Player 1 gets " << p2PointsLost << " points"
./backend/combatCalculator.cpp:1700:        std::cout << ">> Player 2 gets " << p1PointsLost << " points"
./backend/combatCalculator.cpp:1704:      std::cout << "\n";
./backend/combatCalculator.cpp:2264:        std::cout << ">> Place " << p2DamageDie
./backend/combatCalculator.cpp:2269:        std::cout << ">> Place " << p1DamageDie
./backend/combatCalculator.cpp:2276:        std::cout << ">> Player 1 gets " << p2PointsLost << " points"
./backend/combatCalculator.cpp:2280:        std::cout << ">> Player 2 gets " << p1PointsLost << " points"
./backend/combatCalculator.cpp:2284:      std::cout << "\n";
./backend/combatCalculator.cpp:2334:        std::cout << "Skipping Phase 3) Standard round " + std::to_string(i + 1)
./backend/entity.cpp:2027:  std::cout << "How many turns have the Wonder been in play for?"
./backend/entity.cpp:2032:    std::cout << "Error: Wonder ought to be in play for 1-6 turns only"
./backend/entity.cpp:2056:  std::cout << "Enter 1 if the Trebuchet is packed. Enter 0 if unpacked"
./backend/entity.cpp:2120:    std::cout << "Error: formatAttributeCode not found"
./backend/entity.cpp:2179:    std::cout << "Error: foregroundColorCode not found"
./backend/entity.cpp:2238:    std::cout << "Error: backgroundColorCode not found"
./backend/entity.cpp:2246:    std::cout << "\033[" << formatAttributeCode << ";" << foregroundColorCode
./backend/entity.cpp:2251:    std::cout << "\033[" << formatAttributeCode << ";" << foregroundColorCode
./backend/entity.cpp:2263:  std::cout << " ";
./backend/entity.cpp:2285:      std::cout << "Error: Age not recognized for " << entityName << "\n";
./backend/entity.cpp:2292:    std::cout << " ";
./backend/entity.cpp:2294:    std::cout << " ";
./backend/entity.cpp:2296:    std::cout << " has a total of ";
./backend/entity.cpp:2299:    std::cout << "HP";
./backend/entity.cpp:2304:      std::cout << ", ";
./backend/entity.cpp:2307:      std::cout << "SD";
./backend/entity.cpp:2310:      std::cout << ", ";
./backend/entity.cpp:2313:      std::cout << "RD";
./backend/entity.cpp:2316:      std::cout << ", ";
./backend/entity.cpp:2319:      std::cout << "PV";
./backend/entity.cpp:2322:      std::cout << ", ";
./backend/entity.cpp:2325:      std::cout << "GV";
./backend/entity.cpp:2330:    std::cout << " of type: ";
./backend/entity.cpp:2422:        std::cout << " ";
./backend/entity.cpp:2429:    std::cout << " is dead";
./backend/entity.cpp:2432:  std::cout << "\n";
./backend/fileImporter.cpp:226:      std::cout << "Error: " << returnEntity.entityName
./backend/fileImporter.cpp:282:      std::cout << "Error: " << returnEntity.entityName
./backend/fileImporter.cpp:499:      std::cout << "Error: " << returnEntity.entityName
./backend/fileImporter.cpp:698:      std::cout << "Error: " << returnEntity.entityName
./backend/fileImporter.cpp:729:    std::cout << "Error: " << inputEntityName
./backend/fileImporter.cpp:732:    std::cout << "Either I have not implemented the entity or you mistyped the "
./backend/fileImporter.cpp:740:    std::cout << "Error: All entities (except assisting monks) must have a "
./backend/fileImporter.cpp:749:    std::cout << "Error: " << returnEntity.entityName
./backend/fileImporter.cpp:766:      std::cout << "Error: " << returnEntity.entityName
./backend/fileImporter.cpp:782:    std::cout << "Error: " << returnEntity.entityName
./backend/fileImporter.cpp:799:    std::cout << "Error: " << returnEntity.entityName
./backend/fileImporter.cpp:823:    std::cout << "Error: No valid first quantity"
./backend/fileImporter.cpp:829:      std::cout << "Error: The output was 0 but the input was not 0 for the "
./backend/fileImporter.cpp:840:    std::cout << "Error: A limit of 100 units is more than reasonable"
./backend/fileImporter.cpp:871:    std::cout << "Error: Failed to open the file called" << inputEntityFilename
./backend/fileImporter.cpp:895:        std::cout << "Error: Too much input. Only enter the values for up to "
./backend/fileImporter.cpp:898:        std::cout << "The input is supposed to be:"
./backend/fileImporter.cpp:900:        std::cout << "[P1_Non-Monk_Entity_Name] [P1_Entity_Quantity] Monk "
./backend/fileImporter.cpp:903:        std::cout << "[P2_Non-Monk_Entity_Name] [P2_Entity_Quantity] Monk "
./backend/fileImporter.cpp:919:      std::cout << "Error: Too little input. You must enter the values for up "
./backend/fileImporter.cpp:922:      std::cout << "The input is supposed to be:"
./backend/fileImporter.cpp:924:      std::cout << "[P1_Non-Monk_Entity_Name] [P1_Entity_Quantity] Monk "
./backend/fileImporter.cpp:927:      std::cout << "[P2_Non-Monk_Entity_Name] [P2_Entity_Quantity] Monk "
./backend/fileImporter.cpp:935:      std::cout << "Error: Non-Monk entity name for player 1's 'assisting "
./backend/fileImporter.cpp:941:      std::cout << "Error: Non-Monk entity name for player 2's 'assisting "
./backend/fileImporter.cpp:1024:        std::cout << "Error: Player 1's first monk must be of > 1 quantity"
./backend/fileImporter.cpp:1029:        std::cout << "Error: Player 1 cannot have the second monk 'assisting' "
./backend/fileImporter.cpp:1032:        std::cout << "The second monk must have a quantity of 0"
./backend/fileImporter.cpp:1043:        std::cout << "Error: Player 2's first monk must be of > 1 quantity"
./backend/fileImporter.cpp:1048:        std::cout << "Error: Player 2 cannot have the second monk 'assisting' "
./backend/fileImporter.cpp:1051:        std::cout << "The second monk must have a quantity of 0"
./backend/fileImporter.cpp:1087:    std::cout << "Error: Input filename supposed to be called "
./backend/fileImporter.cpp:1097:    std::cout << "Error: Failed to open the file called "
./backend/fileImporter.cpp:1128:        std::cout << "Error: You have entered too much input into "
./backend/fileImporter.cpp:1130:        std::cout << "You will have to replace the existing "
./backend/fileImporter.cpp:1146:      std::cout << "Error: You have entered too little input input into "
./backend/fileImporter.cpp:1148:      std::cout << "You will have to replace the existing "
./backend/fileImporter.cpp:1179:          std::cout << "The technologies/events file..."
./backend/fileImporter.cpp:1185:          std::cout << "The player details file..."
./backend/fileImporter.cpp:1189:          std::cout << "Error: For each row, enter a Medieval Age (1-4)"
./backend/fileImporter.cpp:1192:          std::cout << "Generally.."
./backend/fileImporter.cpp:1194:          std::cout << "Note that you must leave the names next to the numbers"
./backend/main.cpp:19:  std::cout << "remaning damage value p1: " << inputRemainingDamageP1 << "\n";
./backend/main.cpp:20:  std::cout << "remaning damage value p2: " << inputRemainingDamageP2 << "\n";
./backend/main.cpp:152:  std::cout << "You entered..."
./backend/main.cpp:156:    std::cout << "(Assisting) ";
./backend/main.cpp:161:    std::cout << "(Assisting) ";
./backend/main.cpp:189:    std::cout << "Enter 1 if a one got rolled. Enter 4 if a four got rolled. "
./backend/main.cpp:211:    std::cout << "Enter 1 if a one got rolled. Enter 4 if a four got rolled. "
./backend/modifiersCalculator.cpp:766:    std::cout << "Is " << applyEventCardModifiers.entityName << " Celt?"
./backend/modifiersCalculator.cpp:791:      std::cout << "Is Dangerous_Times attached to "
./backend/modifiersCalculator.cpp:814:      std::cout << "Is Flaming_Arrows attached to "
./backend/modifiersCalculator.cpp:836:      std::cout << "Is High_Ground attached to "
./backend/modifiersCalculator.cpp:863:      std::cout << "Is Husbandry attached to "
./backend/modifiersCalculator.cpp:910:      std::cout << "Is Squires attached to "
./backend/modifiersCalculator.cpp:926:    std::cout << "Is Vengeance_Is_Mine! attached to "
